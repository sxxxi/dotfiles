local function lspconfig_config()

	local lspconfig = require("lspconfig")

	-- PHP
	lspconfig.phpactor.setup {}

	lspconfig.ts_ls.setup {
		init_options = {
			preferences = {
				disableSuggestions = false,
				importModuleSpecifierPreference = "non-relative",
			}
		}
	}

	-- ESLint
	lspconfig.eslint.setup({
		on_attach = function(_, bufnr)
			vim.api.nvim_create_autocmd("BufWritePre", {
				buffer = bufnr,
				command = "EslintFixAll",
			})
		end,
	})

	-- Lua
	luaSetup(lspconfig)
end

function luaSetup(lspconfig)
	-- Lua
	lspconfig.lua_ls.setup {
		on_init = function(client)
			if client.workspace_folders then
				local path = client.workspace_folders[1].name
				if vim.uv.fs_stat(path..'/.luarc.json') or vim.uv.fs_stat(path..'/.luarc.jsonc') then
					return
				end
			end
			client.config.settings.Lua = vim.tbl_deep_extend('force', client.config.settings.Lua, {
				runtime = {
					version = 'LuaJIT'
				},
				-- Make the server aware of Neovim runtime files
				workspace = {
					checkThirdParty = false,
					library = {
						vim.env.VIMRUNTIME
					}
				}
			})
		end,
		settings = {
			Lua = {}
		}
	}
end

return {
	{ 
		"williamboman/mason.nvim", 
		config = function()
			require("mason").setup({
				ui = {
					icons = {
						package_installed = "✓",
						package_pending = "➜",
						package_uninstalled = "✗"
					}
				}
			})
		end
	},
	{
		"williamboman/mason-lspconfig.nvim",
		config = function() 
			require("mason-lspconfig").setup({
				ensure_installed = {
					"lua_ls",
					"harper_ls",
					"phpactor",
					"ts_ls",
					"html",
					"eslint",
					"cssls",
					"biome",
				}
			})
		end
	},
	{
		"neovim/nvim-lspconfig",
		config = lspconfig_config
	}
}
